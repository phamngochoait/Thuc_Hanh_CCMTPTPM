<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        APYaPP0WVRe3PL1RXfXy/BS/TYfk/9k=
</value>
  </data>
</root>